#!/bin/bash

exec 2>> /tmp/bashlog

network_conf=$(cat /dev/stdin)

$gateway

#IP ADDR for the pod
IP_ADDR=192.168.20.10/24

# Pick a namespace name
namespace=anyname

if [[ $CNI_COMMAND == "ADD" ]]; then

# Add a veth pair
  mkdir -p /var/run/netns/
  ln -sfT $CNI_NETNS /var/run/netns/$namespace
  ip link add veth1 type veth peer name veth2
  # Connect to some bridge if needed
  # ip link set veth1 master <bridge>
  ip link set dev veth1 up
  ip link set veth2 netns $namespace
  ip netns exec $namespace ip link set veth2 down
  ip netns exec $namespace ip link set veth2 name $CNI_IFNAME
  ip netns exec $namespace ip link set $CNI_IFNAME up
  ip netns exec $namespace ip addr add $IP_ADDR dev $CNI_IFNAME
  # Add route if needed
  #ip netns exec $namespace ip route add default via .... dev $CNI_IFNAME

# Discover pf's and vf's
  devs=($(ls /sys/class/net))
  pfs=()
  vfs=()

  for dev in ${devs[@]}; do
    if [[ -f "/sys/class/net/$dev/device/sriov_numvfs" ]]; then
      pfs+=($dev)
      devfiles=($(ls /sys/class/net/$dev/device/))
      for devfile in ${devfiles[@]}; do
         echo "devfile  $devfile"
         if [[ $devfile == virtfn* ]]; then
            echo "PATH: /sys/class/net/$dev/device/$devfile/net"
            echo "LS:   $(ls /sys/class/net/$dev/device/$devfile/net)"

            vfnic=$(ls /sys/class/net/$dev/device/$devfile/net)

            if [ ! -z $vfnic ]; then
               echo ADDING
               vfnic=$(ls /sys/class/net/$dev/device/$devfile/net)
               vfs+=($vfnic)
            fi
         fi
      done
    fi
  done

# Move vf's to container
  for ifc in ${vfs[@]}; do
    ip link set $ifc netns $namespace
  done

# Move pf's to container
  for ifc in ${pfs[@]}; do
    ip link set $ifc netns $namespace
  done

OUTPUT="
  {
    \"cniVersion\": \"0.3.1\",
    \"interfaces\": [
      {
        \"name\":\"$CNI_IFNAME\",
        \"mac\": \"$(ip netns exec demons ip link show $CNI_IFNAME | grep link| awk '{print $2}')\",
        \"sandbox\": \"$CNI_NETNS\"
      }
    ],
    \"ips\": [
      {
        \"version\": \"4\",
        \"address\": \"$IP_ADDR\",
        \"gateway\": \"$gateway\",
        \"interface\": 0
      }
    ]
  }"
  echo $OUTPUT >> /tmp/bashlog
  echo $OUTPUT
fi

if [[ $CNI_COMMAND == "DELETE" ]]; then
  ip netns del $namespace || true
fi